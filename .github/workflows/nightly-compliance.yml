name: Nightly Compliance Testing

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: false
        type: boolean

jobs:
  # Build all ZKVMs in parallel
  build-sp1:
    name: Build SP1
    uses: ./.github/workflows/build-sp1.yml
    with:
      commit_hash: fc98075a
    secrets: inherit

  build-openvm:
    name: Build OpenVM
    uses: ./.github/workflows/build-openvm.yml
    with:
      commit_hash: a6f77215f
    secrets: inherit

  build-jolt:
    name: Build Jolt
    uses: ./.github/workflows/build-jolt.yml
    with:
      commit_hash: c4b9b060
    secrets: inherit

  build-zisk:
    name: Build Zisk
    uses: ./.github/workflows/build-zisk.yml
    with:
      commit_hash: main
    secrets: inherit

  # Run tests for each ZKVM after builds complete
  test-sp1:
    name: Test SP1
    needs: build-sp1
    uses: ./.github/workflows/run-tests.yml
    with:
      zkvm_name: sp1
      artifact_name: sp1-binary-fc98075a
    secrets: inherit

  test-openvm:
    name: Test OpenVM
    needs: build-openvm
    uses: ./.github/workflows/run-tests.yml
    with:
      zkvm_name: openvm
      artifact_name: openvm-binary-a6f77215f
    secrets: inherit

  test-jolt:
    name: Test Jolt
    needs: build-jolt
    uses: ./.github/workflows/run-tests.yml
    with:
      zkvm_name: jolt
      artifact_name: jolt-binary-c4b9b060
    secrets: inherit

  test-zisk:
    name: Test Zisk
    needs: build-zisk
    uses: ./.github/workflows/run-tests.yml
    with:
      zkvm_name: zisk
      artifact_name: zisk-binary-main
    secrets: inherit

  # Process results and update dashboard
  process-results:
    name: Process Results and Update Dashboard
    needs: [test-sp1, test-openvm, test-jolt, test-zisk]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Download SP1 Results
        if: needs.test-sp1.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: test-results-sp1
          path: results/results-sp1
        continue-on-error: true
          
      - name: Download OpenVM Results
        if: needs.test-openvm.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: test-results-openvm
          path: results/results-openvm
        continue-on-error: true
          
      - name: Download Jolt Results
        if: needs.test-jolt.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: test-results-jolt
          path: results/results-jolt
        continue-on-error: true

      - name: Download Zisk Results
        if: needs.test-zisk.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: test-results-zisk
          path: results/results-zisk
        continue-on-error: true
          
      - name: Process All Results
        run: |
          echo "Processing test results..."
          ./.github/scripts/process-results.sh results data/compliance
          
      - name: Generate Dashboard
        run: |
          echo "Generating dashboard..."
          ./.github/scripts/generate-dashboard.sh data/compliance docs
          
      - name: Commit Results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add data files
          git add data/compliance/
          git add docs/
          
          # Commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update compliance results - $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
            git push
          fi
          
      - name: Deploy to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          force_orphan: true
          
      - name: Create Summary
        if: always()
        run: |
          echo "## Nightly Compliance Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| ZKVM | Build Status | Test Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------------|-------------|" >> $GITHUB_STEP_SUMMARY
          echo "| SP1 | ${{ needs.build-sp1.result }} | ${{ needs.test-sp1.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| OpenVM | ${{ needs.build-openvm.result }} | ${{ needs.test-openvm.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Jolt | ${{ needs.build-jolt.result }} | ${{ needs.test-jolt.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Zisk | ${{ needs.build-zisk.result }} | ${{ needs.test-zisk.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Dashboard: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY
          
  # Cleanup old artifacts
  cleanup:
    name: Cleanup Old Artifacts
    needs: process-results
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Cleanup Old Data
        run: |
          # Remove data older than 90 days
          find data/compliance/history -type f -mtime +90 -delete
          find data/compliance/archives -type f -mtime +90 -delete
          
          # Commit cleanup if there are changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if ! git diff --quiet; then
            git add -A
            git commit -m "Cleanup old artifacts (90-day retention)"
            git push
          fi